# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    nginx.yaml                                         :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: aberry <aberry>                            +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2021/03/12 01:51:57 by aberry            #+#    #+#              #
#    Updated: 2021/03/20 03:13:37 by aberry           ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app   : nginx
    env   : ft_services
    owner : aberry
spec:
  # Replicas - это свойство объекта Spec развертывания, которое определяет, сколько подов мы хотим запустить.
  replicas: 1
  # Новые поды становятся готовыми или доступными (по крайней мере, через MinReadySeconds).
  minReadySeconds: 15
  # Тип указывает стратегию, используемую в этом развертывании при переходе от текущей версии к следующей.
  # Стратегия RollingUpdate обеспечивает нулевое время простоя при развертывании.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # После завершения работы одного модуля у нас все еще будет работать один модуль, таким образом сохраняя доступность нашего приложения
      maxUnavailable: 1
      # Определяет максимальное количество модулей, добавляемых к развертыванию
      maxSurge: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        # Image - это образ контейнера, который мы хотим запустить в этом поде.
        image: nginx_image
        # Отключаем возможность подтягивать image с dockerhub 
        imagePullPolicy: Never
        # Порт контейнера: порт, который прослушивает контейнер. Это всего лишь индикатор для читателя (отключение порта не ограничивает доступ).
        ports:
        - containerPort: 80
        - containerPort: 443
---
apiVersion: v1
# Kind: указывает тип ресурса Kubernetes, который мы хотим создать.
kind: Service
metadata:
  # Имя: определяет имя ресурса.
  name: nginx-service
  labels:
    app  : mysql
    env  : ft_services
    owner: aberry
  # Чтобы запросить назначение из определенного пула, прописываем эту строчку 
  annotations:
        metallb.universe.tf/allow-shared-ip: services
# Spec - это объект, определяющий желаемое состояние ресурса.
spec:
  # Selector: объект, содержащий свойства для выбора модулей.
  selector:
    app: nginx
  # Тип спецификации, мы выбираем LoadBalancer, чтобы получить айпи адрес к которому можно будет подключиться извне
  type: LoadBalancer
  # Port: указывает порт, через который служба получает запросы.
  # TargetPort: порт, на который перенаправляются входящие запросы.
  # Protocol определяет связь.
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
